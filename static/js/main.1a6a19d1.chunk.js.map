{"version":3,"sources":["api/requests.js","components/ViewerCount.jsx","components/StreamSelector.jsx","components/Splitter.jsx","components/TwitchChat.jsx","components/TwitchPlayer.jsx","containers/TwitchLite.jsx","App.js","serviceWorker.js","index.js"],"names":["CLIENT_ID","USER_CACHE","Map","STREAM_CACHE","CACHE_EXPIRY_MS","getStreamInfo","_x","_getStreamInfo","apply","this","arguments","_callee","channelName","channel","stream","regenerator_default","a","wrap","_context","prev","next","getChannelData","sent","getStreamData","id","login","abrupt","stop","_x2","_getChannelData","_callee3","loginName","_context3","has","get","data","Promise","_ref","Object","asyncToGenerator","mark","_callee2","resolve","reject","_context2","fetch","concat","method","headers","Content-Type","Client-ID","then","response","json","length","set","timestamp","Date","now","catch","e","_x5","_x6","_callee5","cached","_context5","_ref2","_callee4","_context4","_x7","_x8","ViewerCount","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","channelId","setState","_this$state$stream","title","type","viewer_count","live","react_default","createElement","className","width","height","viewBox","cx","cy","r","React","Component","StreamSelector","addToSavedList","display_name","savedList","preventDefault","target","value","add","saveSavedList","changeStream","ref","event","CustomEvent","detail","streamName","window","dispatchEvent","getSavedList","undefined","localStorage","getItem","list","Set","toConsumableArray","JSON","parse","sort","handleEnter","keyCode","stopPropagation","onStreamNameChange","removeFromSavedList","delete","setItem","stringify","forceUpdate","showFavourites","favouritesOpen","hideFavourites","_this2","favourites","map","key","onClick","ViewerCount_ViewerCount","onBlur","onFocus","onMouseEnter","onMouseLeave","onSubmit","htmlFor","name","defaultValue","select","onKeyDown","onKeyUp","toggleFavourites","Splitter","onDragEnd","newSize","offsetParent","offsetWidth","clientX","size","toggleChatVisibility","hidden","orientation","matchMedia","matches","dragging","addEventListener","_this$state","gridTemplate","style","gridTemplateColumns","children","draggable","TwitchChat","IFrameSource","src","frameBorder","TwitchPlayer","allowFullScreen","DEFAULT_STREAM","TwitchLite","getQuery","queryValue","URLSearchParams","location","search","setQuery","params","history","replaceState","pathname","chatHidden","Splitter_Splitter","StreamSelector_StreamSelector","App","containers_TwitchLite","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","error","ReactDOM","render","src_App","document","getElementById","URL","process","href","origin","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.1a6a19d1.chunk.js","sourcesContent":["const CLIENT_ID = 'yotu3p1ebkzuqov5hy49v1tvtdcvem';\r\n\r\nconst USER_CACHE = new Map(); // [key: {data}]\r\nconst STREAM_CACHE = new Map(); // [key: {data, timestamp}]\r\nconst CACHE_EXPIRY_MS = 1 * 60 * 1000;\r\n\r\nexport async function getStreamInfo(channelName) {\r\n    const channel = await getChannelData(channelName);\r\n    const stream = await getStreamData(channel.id, channel.login);\r\n    return stream;\r\n};\r\n\r\nexport async function getChannelData(loginName) {\r\n    if (USER_CACHE.has(loginName)) {\r\n        return USER_CACHE.get(loginName).data;\r\n    }\r\n\r\n    return new Promise(async (resolve, reject) => {\r\n        fetch(`https://api.twitch.tv/helix/users?login=${loginName}`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Client-ID': CLIENT_ID,\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                if (!json.data.length) {\r\n                    reject(`Request error: no user '${loginName}' found.`);\r\n                } else {\r\n                    USER_CACHE.set(loginName, { data: json.data[0], timestamp: Date.now() })\r\n                    resolve(json.data[0]);\r\n                }\r\n            })\r\n            .catch((e) =>\r\n                reject(`Request error: error while requesting user '${loginName}`)\r\n            );\r\n    })\r\n}\r\n\r\nasync function getStreamData(id, loginName) {\r\n    if (STREAM_CACHE.has(loginName)) {\r\n        const cached = STREAM_CACHE.get(loginName);\r\n        if (cached.timestamp > Date.now() - CACHE_EXPIRY_MS) {\r\n            return cached.data;\r\n        }\r\n    }\r\n\r\n    return new Promise(async (resolve, reject) => {\r\n        fetch(`https://api.twitch.tv/helix/streams?first=1&user_id=${id}`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Client-ID': CLIENT_ID,\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                if (!json.data.length) {\r\n                    resolve(null);\r\n                } else {\r\n                    STREAM_CACHE.set(loginName, { data: json.data[0], timestamp: Date.now() })\r\n                    resolve(json.data[0]);\r\n                }\r\n            })\r\n            .catch((e) =>\r\n                reject(`Request error: error while requesting stream for user '${loginName}`)\r\n            );\r\n    })\r\n}\r\n","import React from 'react';\r\nimport { getStreamInfo } from '../api/requests';\r\n\r\nexport default class ViewerCount extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            stream: null,\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const stream = await getStreamInfo(this.props.channelId);\r\n        if (stream) {\r\n            this.setState({ stream });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.stream) {\r\n            return null\r\n        };\r\n\r\n        const { title, type, viewer_count } = this.state.stream;\r\n        const live = type === 'live' ? ' live' : '';\r\n\r\n        return (\r\n            <span className='ViewerCount' title={title}>\r\n                <span className={'circle' + live}>\r\n                    <svg width=\"10\" height=\"10\" viewBox=\"0 0 10 10\">\r\n                        <circle cx=\"5\" cy=\"5\" r=\"5\" />\r\n                    </svg>\r\n                </span>\r\n                <span className='count'>{viewer_count}</span>\r\n            </span>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ViewerCount from './ViewerCount';\r\n\r\nimport { getChannelData } from '../api/requests';\r\n\r\nexport default class StreamSelector extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            favouritesOpen: false,\r\n            savedList: [],\r\n        };\r\n        this.ref = null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getSavedList();\r\n    }\r\n\r\n    render() {\r\n        const favourites = [...this.state.savedList].map(stream =>\r\n            <li key={stream}>\r\n                <span\r\n                    className='stream'\r\n                    onClick={() => this.changeStream(stream)}\r\n                >\r\n                    {stream}\r\n                </span>\r\n                <ViewerCount channelId={stream}></ViewerCount>\r\n                <button\r\n                    title='Remove from Favourites list'\r\n                    onClick={() => this.removeFromSavedList(stream)}\r\n                >\r\n                    Remove\r\n                </button>\r\n            </li>\r\n        );\r\n\r\n        return (\r\n            <form\r\n                className='StreamSelector'\r\n                onBlur={this.hideFavourites}\r\n                onFocus={this.showFavourites}\r\n                onMouseEnter={this.showFavourites}\r\n                onMouseLeave={this.hideFavourites}\r\n                onSubmit={this.addToSavedList}\r\n            >\r\n                <label htmlFor='stream'>Stream:</label>\r\n                <span className='streamInputContainer'>\r\n                    <input\r\n                        ref={ref => this.ref = ref}\r\n                        id='stream'\r\n                        name='stream'\r\n                        type='text'\r\n                        defaultValue={this.props.streamName}\r\n                        onBlur={this.onStreamNameChange}\r\n                        onFocus={e => e.target.select()}\r\n                        onKeyDown={this.handleEnter}\r\n                        onKeyUp={this.handleEnter}\r\n                    />\r\n                    <button type='submit' title='Add to Favourites'>+</button>\r\n                </span>\r\n                <button\r\n                    type='button'\r\n                    className={this.state.favouritesOpen ? 'open' : ''}\r\n                    title={(this.state.favouritesOpen ? 'Open' : 'Close') + ' Favourites list'}\r\n                    onClick={this.toggleFavourites}>\r\n                    v\r\n                </button>\r\n                {this.state.favouritesOpen &&\r\n                    <div\r\n                        className='favourites'\r\n                    >\r\n                        <small>Favourites list</small>\r\n                        <ul>\r\n                            {favourites.length ? favourites : '- no favourites saved -'}\r\n                        </ul>\r\n                    </div>\r\n                }\r\n            </form>\r\n        );\r\n    }\r\n\r\n    addToSavedList = async (e) => {\r\n        e.preventDefault();\r\n        const channelName = e.target.stream.value;\r\n        const { display_name } = await getChannelData(channelName);\r\n        const { savedList } = this.state;\r\n        savedList.add(display_name);\r\n        this.saveSavedList(savedList);\r\n    }\r\n\r\n    changeStream = (stream) => {\r\n        if (this.ref) {\r\n            this.ref.value = stream;\r\n        }\r\n        const event = new CustomEvent('streamChange', { detail: { streamName: stream } });\r\n        window.dispatchEvent(event);\r\n    }\r\n\r\n    getSavedList = (setState = true) => {\r\n        const json = window.localStorage.getItem('savedList') || '[]';\r\n        const list = new Set([...JSON.parse(json).sort()]);\r\n        if (setState) {\r\n            this.setState({ savedList: list });\r\n        } else {\r\n            return list;\r\n        }\r\n    }\r\n\r\n    handleEnter = (e) => {\r\n        if (e.keyCode && e.keyCode === 13) {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            this.onStreamNameChange(e);\r\n        }\r\n    }\r\n\r\n    onStreamNameChange = (e) => {\r\n        e.preventDefault();\r\n        if (e.target.value !== this.props.streamName) {\r\n            this.changeStream(e.target.value);\r\n        }\r\n    }\r\n\r\n    removeFromSavedList = (stream) => {\r\n        const list = this.getSavedList(false);\r\n        list.delete(stream);\r\n        this.saveSavedList(list);\r\n    }\r\n\r\n    saveSavedList = (list) => {\r\n        this.setState({ savedList: new Set([...list]) });\r\n        window.localStorage.setItem('savedList', JSON.stringify([...list]));\r\n        this.forceUpdate();\r\n    }\r\n\r\n    showFavourites = () => {\r\n        this.setState({ favouritesOpen: true });\r\n    }\r\n\r\n    hideFavourites = (e) => {\r\n        this.setState({ favouritesOpen: false });\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nexport default class Splitter extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const media = window.matchMedia('(orientation: landscape)');\r\n        const orientation = media.matches ? 'horizontal' : 'vertical';\r\n        const size = window.localStorage.getItem('splitter');\r\n\r\n        this.state = {\r\n            dragging: false,\r\n            hidden: false,\r\n            orientation,\r\n            size: size ? `${size}px` : '1fr',\r\n        };\r\n\r\n        matchMedia('(orientation: landscape)').addEventListener('change', (event) => {\r\n            this.setState({ orientation: event.matches ? 'horizontal' : 'vertical' })\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { orientation, size, hidden } = this.state;\r\n        const gridTemplate = hidden ? '1fr' : `1fr 5px ${size}`;\r\n\r\n        return (\r\n            <div\r\n                className={`Splitter grid ${orientation}`}\r\n                style={{ gridTemplateColumns: gridTemplate }}\r\n            >\r\n                <div className=\"hideChatToggleContainer\">\r\n                    {this.props.children[0]}\r\n                    <div className=\"hideChatToggle\" onClick={this.toggleChatVisibility}>\r\n                        <span>{hidden ? 'Show' : 'Hide'}<br />chat</span>\r\n                    </div>\r\n                </div>\r\n                {hidden ? null : <div\r\n                    className={`drag ${orientation}`}\r\n                    draggable={true}\r\n                    onDragEnd={this.onDragEnd}\r\n                    title={'Drag to resize'}\r\n                />}\r\n                {hidden ? null : this.props.children[1] || null}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    onDragEnd = (event) => {\r\n        const newSize = event.target.offsetParent.offsetWidth - event.clientX;\r\n        window.localStorage.setItem('splitter', newSize);\r\n        this.setState({ size: `${newSize}px` });\r\n    }\r\n\r\n    toggleChatVisibility = () => {\r\n        this.setState({ hidden: !this.state.hidden });\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nexport default function TwitchChat(props) {\r\n    const { streamName } = props;\r\n    const IFrameSource = `https://www.twitch.tv/embed/${streamName}/chat?darkpopout`;\r\n\r\n    return (\r\n        <div className='TwitchChat'>\r\n            <iframe title='Twitch Chat' src={IFrameSource} frameBorder='0' />\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function TwitchPlayer(props) {\r\n    const { streamName } = props;\r\n    const IFrameSource = `https://player.twitch.tv/?volume=0.3&channel=${streamName}&autoplay=false`;\r\n\r\n    return (\r\n        <div className='TwitchPlayer'>\r\n            <iframe title='Twitch Player' src={IFrameSource} frameBorder='0' allowFullScreen />\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport StreamSelector from '../components/StreamSelector';\r\nimport Splitter from '../components/Splitter';\r\nimport TwitchChat from '../components/TwitchChat';\r\nimport TwitchPlayer from '../components/TwitchPlayer';\r\n\r\nconst DEFAULT_STREAM = 'monstercat'\r\n\r\nclass TwitchLite extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            streamName: this.getQuery() || DEFAULT_STREAM,\r\n        };\r\n\r\n        window.addEventListener('streamChange', (e) => {\r\n            this.setQuery(e.detail.streamName);\r\n            this.setState({ streamName: e.detail.streamName });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={'TwitchLite' + (this.state.chatHidden ? ' hide-chat' : '')}>\r\n                <Splitter>\r\n                    <div className=\"playerPanel\">\r\n                        <TwitchPlayer streamName={this.state.streamName} />\r\n                    </div>\r\n                    <div className='chatPanel'>\r\n                        <StreamSelector streamName={this.state.streamName} />\r\n                        <TwitchChat streamName={this.state.streamName} />\r\n                    </div>\r\n                </Splitter>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getQuery = () => {\r\n        const queryValue = (new URLSearchParams(window.location.search)).get('stream');\r\n        if (!queryValue) {\r\n            return window.localStorage.getItem('lastWatched') || null;\r\n        }\r\n        return queryValue;\r\n    }\r\n\r\n    setQuery = (stream) => {\r\n        window.localStorage.setItem('lastWatched', stream);\r\n        const params = new URLSearchParams(window.location.search);\r\n        params.set('stream', stream);\r\n        window.history.replaceState({}, '', `${window.location.pathname}?${params}`);\r\n    };\r\n}\r\n\r\nexport default TwitchLite;\r\n","import React from 'react';\r\nimport './App.css';\r\n\r\nimport TwitchLite from './containers/TwitchLite';\r\n\r\nfunction App() {\r\n\treturn (\r\n\t\t<div className='App'>\r\n\t\t\t<TwitchLite></TwitchLite>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}